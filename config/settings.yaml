app:
  env: "development"  # development, testing, production
  port: 8000
  version: 0.1.0
  max_attachment_size: 26214400  # 25MB in bytes (25 * 1024 * 1024)
  allowed_file_types:
    extensions: [".pdf", ".docx", ".xlsx", ".pptx", ".eml", ".txt"]
    mime_types: 
      - "application/pdf"
      - "application/vnd.openxmlformats-officedocument.*"
      - "text/plain"
      - "message/rfc822"

redis:
  host: "localhost"
  port: 6379
  password: null  # null means no password

rate_limits:
  tiers:
    free:
      requests_per_minute: 50  # Higher limits for development
      max_concurrent: 10
    pro:
      requests_per_minute: 200
      max_concurrent: 40
    enterprise:
      requests_per_minute: 2000
      max_concurrent: 200

openai:
  max_tokens_per_request: 16000
  monthly_cost_limit: 200  # Lower cost limit for development
  model_choices:
    - "gpt-4o-mini"
    - "gpt-3.5-turbo-1106"
  fallback_model: "gpt-3.5-turbo-1106"  # Use cheaper model for development

email_analysis:
  department_keywords:
    IT: ["software", "hardware", "server", "network", "computer", "technology", "technical", "IT"]
    HR: ["hiring", "recruitment", "employee", "benefits", "hr", "personnel", "training", "onboarding"]
    Finance: ["budget", "payment", "invoice", "financial", "accounting", "expense", "finance", "cost"]
    Legal: ["contract", "agreement", "compliance", "law", "legal", "policy", "regulation", "terms"]
    Marketing: ["campaign", "advertisement", "social media", "marketing", "promotion", "brand", "market"]
    Sales: ["customer", "client", "sale", "opportunity", "lead", "deal", "revenue", "prospect"]
    Operations: ["operations", "logistics", "supply chain", "procurement", "facility", "warehouse"]
    Product: ["product", "feature", "roadmap", "design", "user experience", "development", "release"]

webhook:
  enabled: true
  url: "localhost:9000/webhook"
  auth_token: null
  timeout: 30
  retry_attempts: 3

notifications:
  email:
    enabled: false
    smtp_server: "smtp.example.com"
    smtp_port: 587
    sender: "noreply@mailanalyzer.com"
    recipients: ["dev-team@company.com"]
  log_file:
    path: "logs/dev-errors.log"
    max_size: 100MB
    backup_count: 5

prompts:
  subject_analysis: |
    You are an AI assistant that analyzes email subject lines. Your task is to categorize each subject line and identify its business context.
    
    For each subject line, provide the following information:
    - tag: the business category (choose one from: timesheet, approval, staffing, sow, finance-review, general)
    - cluster: a high-level grouping or topic (e.g., month, client, project, system name) â€” avoid personal names or email addresses
    - subject: the original subject line
    
    Analyze the provided email subject lines and return a JSON array where each item includes these three fields.
    
    Example response format:
    {
      "results": [
        {
          "tag": "timesheet",
          "cluster": "March 2024",
          "subject": "Timesheet approval for March 2024"
        },
        {
          "tag": "approval",
          "cluster": "Project X",
          "subject": "Please approve design for Project X"
        }
      ]
    }
    
    Return your analysis as a valid JSON object with a "results" array containing an entry for each subject line.
  email_analysis: |
    You are an AI assistant that analyzes emails. Your task is to extract key information from the email and categorize it.
    
    For each email, provide the following information:
    - category: the business category (choose one from: timesheet, approval, staffing, sow, finance-review, general)
    - priority: the priority level (high, medium, low)
    - action_required: whether action is required (true, false)
    - summary: a brief summary of the email content
    
    Return your analysis as a valid JSON object.
  default: |
    You are an AI assistant that analyzes text. Your task is to analyze the provided text for {analysis_type}.
    
    Return your analysis as a valid JSON object.
